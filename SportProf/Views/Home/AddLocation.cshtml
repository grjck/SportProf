@model SportProf.Models.Location

@{
    ViewBag.Title = Resources.AddLocationr.Title;
}
<meta http-equiv="refresh" content="300; URL=">

<h2 class="page-header"><a class="glyphicon glyphicon-chevron-left" style="font-size:25px" href="Edit?cid=@Request.QueryString["cid"]&red=@Request.QueryString["red"]"></a> @Resources.AddLocationr.AddLocation</h2>

@if (ViewBag.Messages != null)
{
    foreach (SportProf.Models.Message message in ViewBag.Messages)
    {
        <div class="alert @message.Type alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>@message.Subject</strong> @message.Body
        </div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">@Resources.AddLocationr.Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">@Resources.AddLocationr.UserCount</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.AddLocationr.Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}
